package ReadingNumbers;

// 숫자 읽기
// 범위를 주는 것, 숫자 자르기

public class ReadingNumbers {

	public static void main(String[] args) {
		
		String [] k07_units = {"영", "일", "이", "삼", "사", "오", "육", "칠", "팔", "구"};   // k07_units변수명으로 하여 Stirng 형태의 배열을 선언해주며 다음과 같은 내용이 들어가게 한다.
		
		for(int k07_i = 0; k07_i < 101; k07_i++) {		// int 형태로 하여 k07_i는 0부터 100까지 1씩 증가한다.
			
			if(k07_i >= 0 && k07_i < 10) {			// k07_i는 0 이상이면서 10 미만 이면
				System.out.printf("일의 자리 : %s\n", k07_units[k07_i]);	// 일의 자리가 출력되도록 하며 문자열이 출력되므로 %s 서식을 사용한다.
			}													// units 배열에 있는 문자열들이 해당하는 값에 맞게 출력된다.
			else if(k07_i >= 10 && k07_i < 100) {		// k07_i는 10 이상이면서 100 미만이면 
				int k07_i10, k07_i0;					// int 형태로 하여 k07_i10과 k07_i0를 선언
				k07_i10 = k07_i / 10;	// k07_i를 10으로 나누면 앞의 십의 자리가 읽어지며 이를 k07_i10에 대입하였다.
				k07_i0 = k07_i % 10;	// k07_i를 %10을 하면 나머지 일의 자리가 읽어지며 이를 k07_i0에 대입하였다. 
				
				if(k07_i0 == 0) {	// k07_i0가 0 이면 								// 가운데는 '십' 문자가 들어가도록 고정해주었다.
					System.out.printf("십의 자리 : %s십\n", k07_units[k07_i10]);	// 십의 자리를 출력하도록 하였고 문자열이 출력되므로 %s 서식을 사용한다.그리고 \n으로 줄바꿈을 해주었다. 
				} else {												
					System.out.printf("십의 자리 : %s십%s\n", k07_units[k07_i10], k07_units[k07_i0]);	// 그렇지 않으면 첫번째 문자와 세번째 문자는 십의 자리와 일의 자리가 읽어지도록 하였다. 
				}
			}
			else System.out.printf("==> %d\n", k07_i);	// 그렇지 않으면 일의 자리 , 십의 자리 모두 해당이 되지 않을 경우 즉, 자릿수를 벗어나면 해당 숫자를 출력하도록 하였다. 
		}											// 따라서 100이 되는 순간 문자가 출력되지 않고 숫자가 출력된다.		
	}

}
